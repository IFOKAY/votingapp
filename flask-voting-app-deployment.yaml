apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-voting-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-voting-app
  template:
    metadata:
      labels:
        app: flask-voting-app
    spec:
      containers:
      - name: flask-voting-app
        image: flask-voting-app:latest  # Replace with actual image name if needed
        ports:
        - containerPort: 5001
        env:
        - name: DB_HOST
          value: mysql  # The MySQL service name
        - name: DB_USER
          value: voteuser  # MySQL username
        - name: DB_PASSWORD
          value: votepassword  # MySQL password
        - name: DB_NAME
          value: voting_app  # The name of the database
        # Optional: if you want to specify resource limits/requests
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: flask-voting-app
spec:
  selector:
    app: flask-voting-app
  ports:
    - port: 5001
      targetPort: 5001
  # Optional: you can expose the service to a specific type (e.g., ClusterIP)
  type: ClusterIP  # Default is ClusterIP, but can be adjusted as needed

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: flask-voting-app
spec:
  to:
    kind: Service
    name: flask-voting-app
  port:
    targetPort: 5001
  # Optional: Adding TLS for secure communication
  tls:
    termination: edge  # Can be edge, passthrough, or re-encrypt based on your requirements
